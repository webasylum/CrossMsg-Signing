plugins {
    id 'java'
    id 'application'
    id 'jacoco'
}

group = 'com.tsg.crossmsg'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url "https://repository.apache.org/content/repositories/releases/"
    }
}

dependencies {
    // XML Processing
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.16.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.1'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.16.1'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.16.1'
    implementation 'org.apache.xmlgraphics:batik-all:1.17'
    implementation 'xerces:xercesImpl:2.12.2'
    implementation 'xml-apis:xml-apis:1.4.01'
    
    // XML Security
    implementation 'org.apache.santuario:xmlsec:2.3.4'
    //implementation 'org.apache.santuario:xmlsec-tools:2.3.4'
    //implementation 'org.apache.santuario:xmlsec-impl:2.3.4'
    //implementation 'org.apache.santuario:xmlsec-api:2.3.4'
    //implementation 'org.apache.santuario:xmlsec-utils:2.3.4'
    
    // JSON Processing
    implementation 'com.nimbusds:nimbus-jose-jwt:9.37.3'  // For JWS
    
    // Cryptography
    implementation 'org.bouncycastle:bcprov-jdk18on:1.77'
    implementation 'org.bouncycastle:bcpkix-jdk18on:1.77'
    
    // Testing
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.10.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.11.0'
    testImplementation 'org.mockito:mockito-core:5.11.0'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        showStandardStreams = true
    }
    filter {
        includeTestsMatching "com.tsg.crossmsg.signing.*"
    }
}

wrapper {
    gradleVersion = '8.6'
    distributionType = Wrapper.DistributionType.BIN
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
    test {
        java {
            srcDirs = ['src/test/java']
        }
        resources {
            srcDirs = ['src/test/resources']
        }
    }
}

// Ensure proper encoding
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs += ['-Xlint:unchecked', '-Xlint:deprecation']
}

// Add test coverage reporting
jacoco {
    toolVersion = "0.8.11"
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }
    
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                '**/model/**',
                '**/config/**'
            ])
        }))
    }
}

// Ensure test coverage report is generated after tests
test.finalizedBy jacocoTestReport 